// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.19.9 clang-1700.3.19.1)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name BugfenderSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
@_exported import BugfenderSDK
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension BugfenderSDK.Bugfender {
  #if compiler(>=5.3) && $NonescapableTypes
  public class func print(_ items: Any..., separator: Swift.String = " ", terminator: Swift.String = "\n", tag: Swift.String? = nil, level: BugfenderSDK.BFLogLevel = .default, filename: Swift.String = #file, line: Swift.Int = #line, funcname: Swift.String = #function)
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  public class func error(_ items: Any..., separator: Swift.String = " ", terminator: Swift.String = "\n", tag: Swift.String? = nil, filename: Swift.String = #file, line: Swift.Int = #line, funcname: Swift.String = #function)
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  public class func warning(_ items: Any..., separator: Swift.String = " ", terminator: Swift.String = "\n", tag: Swift.String? = nil, filename: Swift.String = #file, line: Swift.Int = #line, funcname: Swift.String = #function)
  #endif
}
#if compiler(>=5.3) && $NonescapableTypes
public func BFLog(_ format: Swift.String, _ args: any Swift.CVarArg..., tag: Swift.String? = nil, level: BugfenderSDK.BFLogLevel = .default, filename: Swift.String = #file, line: Swift.Int = #line, funcname: Swift.String = #function)
#endif
#if compiler(>=5.3) && $NonescapableTypes
public func BFLogWarn(_ format: Swift.String, _ args: any Swift.CVarArg..., tag: Swift.String? = nil, filename: Swift.String = #file, line: Swift.Int = #line, funcname: Swift.String = #function)
#endif
#if compiler(>=5.3) && $NonescapableTypes
public func BFLogErr(_ format: Swift.String, _ args: any Swift.CVarArg..., tag: Swift.String? = nil, filename: Swift.String = #file, line: Swift.Int = #line, funcname: Swift.String = #function)
#endif
#if compiler(>=5.3) && $NonescapableTypes
public func BFLogTrace(_ format: Swift.String, _ args: any Swift.CVarArg..., tag: Swift.String? = nil, filename: Swift.String = #file, line: Swift.Int = #line, funcname: Swift.String = #function)
#endif
#if compiler(>=5.3) && $NonescapableTypes
public func BFLogInfo(_ format: Swift.String, _ args: any Swift.CVarArg..., tag: Swift.String? = nil, filename: Swift.String = #file, line: Swift.Int = #line, funcname: Swift.String = #function)
#endif
#if compiler(>=5.3) && $NonescapableTypes
public func BFLogFatal(_ format: Swift.String, _ args: any Swift.CVarArg..., tag: Swift.String? = nil, filename: Swift.String = #file, line: Swift.Int = #line, funcname: Swift.String = #function)
#endif
#if compiler(>=5.3) && $NonescapableTypes
public func bfprint(_ items: Any..., separator: Swift.String = " ", terminator: Swift.String = "", tag: Swift.String? = nil, level: BugfenderSDK.BFLogLevel = .default, filename: Swift.String = #file, line: Swift.Int = #line, funcname: Swift.String = #function)
#endif
